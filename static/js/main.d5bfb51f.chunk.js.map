{"version":3,"sources":["components/plans.js","components/chart.jsx","components/input2.jsx","components/input1.jsx","App.js","index.js","registerServiceWorker.js"],"names":["Plans","this","plans","1","2","3","4","5","6","7","8","9","10","titles","id","Chart","props","state","pieData","labels","map","el","datasets","label","backgroundColor","hoverBackgroundColor","data","plan","planId","options","title","display","text","fontSize","legend","position","className","React","Component","Input2","handleButtonClicked","bind","handleChange","getRecommendations","roundItUp","calculateDifference","num","precision","Math","pow","ceil","i","j","diff","res","lbl","iAbs","jAbs","abs","min","temp","push","difference","forEach","length","console","log","join","e","name","target","setState","value","preventDefault","userData","user_Bonds","user_Large_Cap","user_Mid_Cap","user_Foreign","user_Small_Cap","selectedPlan","getPlan","total","newAmount","Array","fill","titlesConcat","split","selectedPlanId","radiosSequence","idx","onClick","type","onChange","disabled","Input1","handleOptionChange","Object","keys","App","ReactDOM","render","document","getElementById","navigator","window","addEventListener","swUrl","process","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error"],"mappings":"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","file":"static/js/main.d5bfb51f.chunk.js","sourcesContent":["class Plans{\n    constructor(){\n        this.plans=\n        {\n      1: [80, 20, 0, 0, 0],\n      2: [70, 15, 15, 0, 0],\n      3: [60, 15, 15, 10, 0],\n      4: [50, 20, 20, 10, 0],\n      5: [40, 20, 20, 20, 0],\n      6: [35, 25, 5, 30, 5],\n      7: [20, 25, 25, 25, 5],\n      8: [10, 20, 40, 20, 10],\n      9: [5, 15, 40, 25, 15],\n      10: [0, 5, 25, 30, 40]\n    };\n\n        this.titles = \n        [\n            \"Bonds\",\n              \"Large Cap\", \n              \"Mid Cap\", \n              \"Foreign\", \n              \"Small Cap\"\n            ];\n}\n\n    getPlan(id){\n        return this.plans[id];\n    \n    }\n}\n\nexport default Plans;","import React from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport Plans from './plans';\n\n\nclass Chart extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {};\n  }\n  \n  \n  render() {    \n    let plans = new Plans();\n    let titles = plans.titles;\n    let labels = titles.map(el => el+\" %\");\n\n    const pieData = {\n\n      labels: labels,\n      datasets: [\n        {\n          label: 'Rainfall',\n          backgroundColor: [\n            '#B21F00',\n            '#C9DE00',\n           // '#2FDE00',\n           '#ffc0cb',\n            '#00A6B4',\n            '#6800B4'\n          ],\n          hoverBackgroundColor: [\n            '#501800',\n            '#4B5000',\n           // '#175000',\n           '#e75480',\n            '#003350',\n            '#35014F'\n          ],\n          data: this.props.plan          \n        }\n      ]\n    };\n    \n    if (!this.props.planId)\n    return <div>\n      <h2 className=\"gray-title\">Here you can see a chart showing your risk.</h2>\n    </div>\n    else\n\n    return <div>\n    \n      <Pie\n        data={pieData}\n        options={{\n          title: {\n            display: true,\n            text: '',\n            fontSize: 20\n          },\n          legend: {\n            display: true,\n            position: 'right'\n          }\n        }}\n      />\n    </div>\n  }\n}\n\nexport default Chart;\n\n","import React from 'react';\nimport Plans from './plans';\n\n\n\nclass Input2 extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={};\n    this.handleButtonClicked = this.handleButtonClicked.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.getRecommendations = this.getRecommendations.bind(this);\n    this.roundItUp = this.roundItUp.bind(this);\n    this.calculateDifference = this.calculateDifference.bind(this);\n  }\n\n  roundItUp(num) {\n    let precision = 2;\n    precision = Math.pow(10, precision)\n    return Math.ceil(num * precision) / precision\n\n  }\n\n  calculateDifference(i, j, diff, res){\n    let lbl = [\"Bonds\", \"Large Cap\", \"Mid Cap\", \"Foreign\", \"Small Cap\"];\n    let start = \"Transfer $\", mid = \" from \", end = \" to \";\n    let iAbs = diff[i]; // it's always positive\n    let jAbs = Math.abs(diff[j])\n\n    let min = this.roundItUp(Math.min(iAbs, jAbs));\n\n    if (iAbs > jAbs) {\n      diff[i] -= min;\n      diff[j] = 0;\n    } else {\n      diff[j] += min;\n      diff[i] = 0;\n    }\n\n    if (min !== 0) {\n      let temp = start + min + mid + lbl[j] + end + lbl[i];\n      res.push(temp);\n    }\n  }\n\n  getRecommendations(difference){\n    let res=[];\n    \n    let diff=[];\n    \n    difference.forEach(el=>diff.push(this.roundItUp(el/1)));\n    for(let i=0;i<diff.length;i++)\n    {\n      if(diff[i]>0){\n        for(let j=0;j<diff.length;j++){\n          if(diff[j]<0){\n            this.calculateDifference(i,j,diff,res);\n          }\n        }\n        console.log(\"res = \"+res); \n      }\n    }\n    return res.join(\", \");\n\n  }\n\n\n  handleChange(e) {\n    \n    let name = e.target.name;\n    this.setState({ [name] : e.target.value}\n         , function () {\n           console.log(this.state);\n           \n      }\n      );\n   \n  }\n\n  \n\n\n  handleButtonClicked(e) {\n    e.preventDefault();\n  \n    let userData=[\n      this.state.user_Bonds,\n      this.state.user_Large_Cap,\n      this.state.user_Mid_Cap,\n      this.state.user_Foreign,\n      this.state.user_Small_Cap\n    ];\n\n    let plans = new Plans();\n    let selectedPlan = plans.getPlan(this.props.planId) || [\"\", \"\", \"\", \"\", \"\"];\n    //let selectedPlanId = this.props.planId;\n\n \n    let total=0;\n    userData.forEach(el=>total+=el/1  );\n\n    let newAmount=new Array(5).fill(0);\n    let difference=[];\n    console.log(\"selectedPlan = \" + selectedPlan);\n    for (let i = 0; i < 5; i++) {\n      newAmount[i] = this.roundItUp((total / 100) * selectedPlan[i]);\n      let diff = this.roundItUp(newAmount[i] - userData[i]);\n      difference.push(diff<=0 ? diff : \"+\"+diff);\n    }\n\n    \n    this.setState({ \n      difference: difference,\n      newAmount:newAmount\n    }\n      , function () {\n        console.log(this.state);\n\n      }\n    );\n    \n  }\n\n  render() {\n\n    let plans=new Plans();\n    let titles=plans.titles;\n    let titlesConcat=titles.map(el=>el.split(\" \").join(\"_\"));\n    let selectedPlan = this.props.plan || [\"\", \"\", \"\", \"\", \"\"];\n    let selectedPlanId = this.props.planId;\n    let difference = \n    this.state.difference !=null ? \n    this.state.difference : \n    [\"\", \"\", \"\", \"\", \"\"];\n\n    let newAmount=\n      this.state.newAmount != null ?\n        this.state.newAmount :\n        [\"\", \"\", \"\", \"\", \"\"];\n\n   \n    let radiosSequence = [];\n    \n    for (let i = 1; i <= 10; i++) {\n      radiosSequence.push(i);\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n\n            <form className=\"plan-details-container\">\n\n\n              <h1>Personalized Portfolio</h1>\n              <h2>Risk Level {selectedPlanId}</h2>\n\n              \n\n              <div className=\"plan_details_row\">\n                 {titles.map((el,idx) => {\n                  return <label key={idx} className=\"plan_title_label\"> {el}\t</label>\n                  })}\n                \n              </div>\n              <div className=\"plan_details_row\">\n                {selectedPlan.map((el,idx) => {\n                 return  <label key={idx} className=\"plan_title_label\">{el}%\t</label>\n\n                })}\n                \n              </div>\t\t\n\n                <h3>Please Enter Your Current Portfolio</h3>\n              \n              <button className=\"button\"\n                onClick={this.handleButtonClicked} >Rebalance</button>\n\n              <div className=\"plan_container\">\n                <div className=\"plan_details\">\n                  <div className=\"plan_details_row\">\n                    <label className=\"plan_title_label3\">Current Amount</label>\n                    <label className=\"plan_title_label2\">Difference</label>\n                    <label className=\"plan_title_label2\">New Amount</label>\n                    <label className=\"plan_title_label2\">Recomended Transfer</label>\n                  </div>\n\n\n                  {titles.map((title,idx)=>{\n                   return <div key={idx} className=\"plan_details_row\">\n                      <label className=\"plan_details_label\">{title+\" $\"}:</label>\n                      <input type=\"text\" className=\"plan_details_text\"\n                        name={\"user_\"+titlesConcat[idx]} onChange={this.handleChange} />\n                      <input type=\"text\" className=\"plan_details_text\"\n                        name={\"difference_\"+titlesConcat[idx]}\n                        value={difference[idx]}\n                        disabled />\n                      <input type=\"text\" className=\"plan_details_text\"\n                        name={\"new_\" + titlesConcat[idx]}\n                        value={newAmount[idx]}\n                        disabled />\n                    </div>\n                  })} \n  \n\n\n                </div>  {/* end of plan_details */}\n\n\n                <div className=\"recommendations\">\n                  <label className=\"plan_title_label\">Recommendations</label>\n                  <br /><br />\n                    <label className=\"plan_title_label4 align_left\">\n                    {this.getRecommendations(difference)}</label>\n\n                  \n                </div>\n              </div>\n\n\n            </form>\n\n          </div>\n        </div>\n        \n\n\n        <br /><br /><br /><br /><br />\n \n      </div>\n    );\n  }\n}\n\nexport default Input2;\n","import React from 'react';\nimport Chart from './chart';\nimport Plans from './plans';\nimport Input2 from './input2';\n\n\n\n\nclass Input1 extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.handleOptionChange = this.handleOptionChange.bind(this);\n\n    let plans = new Plans();\n    this.state={\n      plans :plans.plans\n    };\n   \n\n  }\n  \n  handleOptionChange(e) {\n  \n    let id = e.target.value;\n    let plans = new Plans();\n\n      this.setState({ \n        planId: id ,\n        plan: plans.getPlan(id)\n      }\n\n      , function () {\n        console.log(this.state);\n      });\n   \n  }\n\n  \n\n\n  render() {\n    \n    let radiosSequence = [];\n    \n    for (let i = 1; i <= 10; i++) {\n      radiosSequence.push(i);\n    }\n\n    let classname = \"div_show\";\n   \n    return (\n      <div className=\"container\">\n\n        <div className={classname}>\n            <h1>Please Select A Risk Level For Your Investment Portfolio</h1>\n            \n            <h2>1 is the lowest risk and 10 is the highest risk</h2>\n\n          <div className=\"radio-buttons-title-container\">\n            <label> Low Risk</label>\n            <label> High Risk</label>\n          </div>\n          \n\n            <form className=\"radio-buttons-container\">\n\n\n\n                {Object.keys(this.state.plans).map((plan,idx)=> {\n                  return (\n                    <div className=\"radio-div\" key={idx}>\n                      \n                      <label>\n                        <input type=\"radio\" \n                        name=\"plans\"\n                          value={plan}\n                          onChange={this.handleOptionChange}\n                        />\n                        {plan}\n            </label>\n                    </div>\n                  );\n                })}\n\n\n              </form>\n\n          <Chart \n            planId={this.state.planId} \n            plan={this.state.plan}\n          />\n\n\n        </div>\n\n        <Input2 \n          planId={this.state.planId}\n          plan={this.state.plan}  \n          />\n\n\n \n      </div>\n    );\n  }\n}\n\nexport default Input1;\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport Input1 from './components/input1';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = { }\n  }\n\n \n\n  \n\n  render() {\n    return (\n      <div className=\"App\">\n        \n        <Input1/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}